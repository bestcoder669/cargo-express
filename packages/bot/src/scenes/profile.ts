// packages/bot/src/scenes/profile.ts - –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è
import { Composer } from 'grammy'
import type { BotContext } from '../types/context'
import { getUserStats, getUserStatistics } from '../services/user'
import { formatCurrency, formatDate, escapeHtml } from '../utils/formatter'
import { logger } from '../utils/logger'

export const profileHandlers = new Composer<BotContext>()

// –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—Ä–æ—Ñ–∏–ª—è
profileHandlers.callbackQuery('profile:main', async (ctx) => {
  await ctx.answerCallbackQuery()
  
  if (!ctx.user) {
    await ctx.reply('‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è')
    return
  }
  
  try {
    const [stats, statistics] = await Promise.all([
      getUserStats(ctx.user.id),
      getUserStatistics(ctx.user.id)
    ])
    
    await ctx.editMessageText(
      `üë§ <b>${escapeHtml(ctx.user.firstName)} ${ctx.user.lastName ? escapeHtml(ctx.user.lastName) : ''}</b>\n` +
      `üÜî ID: <code>#${ctx.user.customId}</code> | üí∞ –ë–∞–ª–∞–Ω—Å: <b>${formatCurrency(stats.balance)}</b>\n\n` +
      'üìä <b>–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n' +
      `‚îú –ó–∞–∫–∞–∑–æ–≤ –≤—Å–µ–≥–æ: ${statistics.totalOrders}\n` +
      `‚îú –ê–∫—Ç–∏–≤–Ω—ã—Ö: ${statistics.activeOrders}\n` +
      `‚îú –ü–æ—Ç—Ä–∞—á–µ–Ω–æ: ${formatCurrency(statistics.totalSpent)}\n` +
      `‚îú –°—ç–∫–æ–Ω–æ–º–ª–µ–Ω–æ: ${formatCurrency(statistics.totalSaved)}\n` +
      `‚îî –°—Ç–∞—Ç—É—Å: ${stats.vipTier === 'REGULAR' ? '–û–±—ã—á–Ω—ã–π' : `VIP ${stats.vipTier} ‚≠ê`}\n\n` +
      '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–º:',
      {
        parse_mode: 'HTML',
        reply_markup: {
          inline_keyboard: [
            [{ text: `üí∞ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å (${formatCurrency(stats.balance)})`, callback_data: 'payment:topup' }],
            [
              { text: 'üì¶ –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤', callback_data: 'orders:history' },
              { text: 'üìç –ê–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏', callback_data: 'addresses:list' }
            ],
            [
              { text: '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data: 'settings:main' },
              { text: 'üéÅ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞', callback_data: 'referral:info' }
            ],
            ...(stats.vipTier !== 'REGULAR' ? [[{ text: '‚≠ê VIP —Å—Ç–∞—Ç—É—Å', callback_data: 'vip:status' }]] : []),
            [{ text: '‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', callback_data: 'menu:main' }]
          ]
        }
      }
    )
  } catch (error) {
    logger.error('Failed to show profile:', error)
    await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ—Ñ–∏–ª—è')
  }
})

// –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤
profileHandlers.callbackQuery('orders:history', async (ctx) => {
  await ctx.answerCallbackQuery()
  await ctx.reply('üì¶ –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏')
})

// –°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤
profileHandlers.callbackQuery('orders:list', async (ctx) => {
  await ctx.answerCallbackQuery()
  await ctx.reply('üì¶ –°–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –±–ª–∏–∂–∞–π—à–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏')
})

// –ê–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
profileHandlers.callbackQuery('addresses:list', async (ctx) => {
  await ctx.answerCallbackQuery()
  await ctx.reply('üìç –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞–º–∏ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–ª–∏–∂–∞–π—à–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏')
})

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏
profileHandlers.callbackQuery('settings:main', async (ctx) => {
  await ctx.answerCallbackQuery()
  await ctx.reply('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –±–ª–∏–∂–∞–π—à–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏')
})

// –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞
profileHandlers.callbackQuery('referral:info', async (ctx) => {
  await ctx.answerCallbackQuery()
  await ctx.reply('üéÅ –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏')
})

// VIP —Å—Ç–∞—Ç—É—Å
profileHandlers.callbackQuery('vip:status', async (ctx) => {
  await ctx.answerCallbackQuery()
  await ctx.reply('‚≠ê –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ VIP —Å—Ç–∞—Ç—É—Å–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏')
})