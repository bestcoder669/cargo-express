// packages/bot/src/scenes/admin/index.ts - –ê–¥–º–∏–Ω—Å–∫–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
import { Composer } from 'grammy'
import type { BotContext } from '../../types/context'
import { getAdminDashboardKeyboard } from '../../keyboards/admin'
import { getDashboardStats } from '../../services/stats'
import { formatCurrency, formatDate } from '../../utils/formatter'
import { logger } from '../../utils/logger'

export const adminHandlers = new Composer<BotContext>()

// Middleware –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–¥–º–∏–Ω—Å–∫–∏—Ö –ø—Ä–∞–≤
const requireAdmin = async (ctx: BotContext, next: () => Promise<void>) => {
  if (!ctx.isAdmin) {
    await ctx.answerCallbackQuery('‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞')
    return
  }
  await next()
}

// –ü—Ä–∏–º–µ–Ω—è–µ–º middleware –∫–æ –≤—Å–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞–º
adminHandlers.use(requireAdmin)

// Dashboard
adminHandlers.callbackQuery('admin:dashboard', async (ctx) => {
  await ctx.answerCallbackQuery()
  
  try {
    const stats = await getDashboardStats()
    const keyboard = await getAdminDashboardKeyboard(ctx.admin!.role)
    
    await ctx.editMessageText(
      'üîß <b>AdminPanel CargoExpress</b>\n' +
      `üë®‚Äçüíº ${ctx.admin!.firstName} ${ctx.admin!.lastName || ''} | ${ctx.admin!.role}\n\n` +
      `üìä <b>DASHBOARD (${formatDate(new Date())})</b>\n\n` +
      'üí∞ <b>–§–ò–ù–ê–ù–°–´ –ó–ê –°–ï–ì–û–î–ù–Ø:</b>\n' +
      `‚îú –í—ã—Ä—É—á–∫–∞: ${formatCurrency(stats.todayRevenue)} (${stats.revenueChange > 0 ? '+' : ''}${stats.revenueChange.toFixed(1)}%)\n` +
      `‚îú –ù–æ–≤—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π: ${stats.todayPayments} —à—Ç\n` +
      `‚îú –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: ${formatCurrency(stats.avgOrderValue)}\n` +
      `‚îî –û–∂–∏–¥–∞—é—Ç –æ–ø–ª–∞—Ç—ã: ${stats.pendingPayments} –∑–∞–∫–∞–∑–æ–≤\n\n` +
      'üì¶ <b>–ó–ê–ö–ê–ó–´ –ó–ê –°–ï–ì–û–î–ù–Ø:</b>\n' +
      `‚îú –°–æ–∑–¥–∞–Ω–æ: ${stats.todayOrders} –∑–∞–∫–∞–∑–æ–≤\n` +
      `‚îú –ü–æ—Å—ã–ª–∫–∏: ${stats.shippingOrders} | –í—ã–∫—É–ø—ã: ${stats.purchaseOrders}\n` +
      `‚îú –¢—Ä–µ–±—É—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è: ${stats.problemOrders} ‚ö†Ô∏è\n` +
      `‚îî –í –æ–±—Ä–∞–±–æ—Ç–∫–µ: ${stats.processingOrders}\n\n` +
      'üë• <b>–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò:</b>\n' +
      `‚îú –í—Å–µ–≥–æ: ${stats.totalUsers} | –ù–æ–≤—ã—Ö —Å–µ–≥–æ–¥–Ω—è: ${stats.todayUsers}\n` +
      `‚îú –û–Ω–ª–∞–π–Ω —Å–µ–π—á–∞—Å: ${stats.onlineUsers}\n` +
      `‚îî VIP –∫–ª–∏–µ–Ω—Ç–æ–≤: ${stats.vipUsers}`,
      {
        parse_mode: 'HTML',
        reply_markup: keyboard
      }
    )
  } catch (error) {
    logger.error('Failed to show admin dashboard:', error)
    await ctx.reply('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–∞–Ω–µ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞')
  }
})

// –û–±–Ω–æ–≤–∏—Ç—å dashboard
adminHandlers.callbackQuery('admin:refresh', async (ctx) => {
  await ctx.answerCallbackQuery('üîÑ –û–±–Ω–æ–≤–ª—è—é...')
  // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ dashboard –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  await ctx.emit('callback_query:data', 'admin:dashboard')
})

// –ó–∞–∫–∞–∑—ã
adminHandlers.callbackQuery(/^admin:orders/, async (ctx) => {
  await ctx.answerCallbackQuery()
  await ctx.reply('üì¶ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–ª–∏–∂–∞–π—à–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏')
})

// –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
adminHandlers.callbackQuery(/^admin:users/, async (ctx) => {
  await ctx.answerCallbackQuery()
  await ctx.reply('üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–ª–∏–∂–∞–π—à–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏')
})

// –§–∏–Ω–∞–Ω—Å—ã
adminHandlers.callbackQuery('admin:finance', async (ctx) => {
  await ctx.answerCallbackQuery()
  await ctx.reply('üí∞ –§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏')
})

// –ü–æ–¥–¥–µ—Ä–∂–∫–∞
adminHandlers.callbackQuery('admin:support', async (ctx) => {
  await ctx.answerCallbackQuery()
  await ctx.reply('üí¨ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–ª–∏–∂–∞–π—à–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏')
})

// –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
adminHandlers.callbackQuery('admin:analytics', async (ctx) => {
  await ctx.answerCallbackQuery()
  await ctx.reply('üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏')
})

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏
adminHandlers.callbackQuery('admin:settings', async (ctx) => {
  await ctx.answerCallbackQuery()
  await ctx.reply('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–∏—Å—Ç–µ–º—ã –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –±–ª–∏–∂–∞–π—à–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏')
})

// –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã
adminHandlers.callbackQuery('admin:admins', async (ctx) => {
  await ctx.answerCallbackQuery()
  await ctx.reply('üë®‚Äçüíº –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ –≤ –±–ª–∏–∂–∞–π—à–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏')
})

// –†–∞—Å—Å—ã–ª–∫–∞
adminHandlers.callbackQuery('admin:broadcast', async (ctx) => {
  await ctx.answerCallbackQuery()
  await ctx.reply('üì¢ –°–∏—Å—Ç–µ–º–∞ —Ä–∞—Å—Å—ã–ª–æ–∫ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –±–ª–∏–∂–∞–π—à–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏')
})

// –°–∫–∞–Ω–µ—Ä
adminHandlers.callbackQuery('admin:scanner', async (ctx) => {
  await ctx.answerCallbackQuery()
  await ctx.reply(
    'üì± <b>–°–∫–∞–Ω–µ—Ä —à—Ç—Ä–∏—Ö-–∫–æ–¥–æ–≤</b>\n\n' +
    'üîÑ –†–µ–∂–∏–º —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.\n' +
    '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —à—Ç—Ä–∏—Ö-–∫–æ–¥ –∏–ª–∏ —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä:\n\n' +
    '<i>–§–æ—Ä–º–∞—Ç: —Ç–µ–∫—Å—Ç –∏–ª–∏ —Ñ–æ—Ç–æ —Å —à—Ç—Ä–∏—Ö-–∫–æ–¥–æ–º</i>',
    {
      parse_mode: 'HTML',
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üì∑ –°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Ñ–æ—Ç–æ', callback_data: 'scanner:photo' }],
          [{ text: '‚úèÔ∏è –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é', callback_data: 'scanner:manual' }],
          [{ text: '‚ùå –ó–∞–∫—Ä—ã—Ç—å —Å–∫–∞–Ω–µ—Ä', callback_data: 'scanner:close' }]
        ]
      }
    }
  )
})

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∫–∞–Ω–µ—Ä–∞
adminHandlers.callbackQuery('scanner:photo', async (ctx) => {
  await ctx.answerCallbackQuery()
  await ctx.reply('üì∑ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Å–æ —à—Ç—Ä–∏—Ö-–∫–æ–¥–æ–º')
})

adminHandlers.callbackQuery('scanner:manual', async (ctx) => {
  await ctx.answerCallbackQuery()
  await ctx.reply('‚úèÔ∏è –í–≤–µ–¥–∏—Ç–µ —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä –∏–ª–∏ —à—Ç—Ä–∏—Ö-–∫–æ–¥ –≤—Ä—É—á–Ω—É—é:')
})

adminHandlers.callbackQuery('scanner:close', async (ctx) => {
  await ctx.answerCallbackQuery()
  await ctx.editMessageText('‚úÖ –°–∫–∞–Ω–µ—Ä –∑–∞–∫—Ä—ã—Ç')
})