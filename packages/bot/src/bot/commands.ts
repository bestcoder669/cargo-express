// packages/bot/src/bot/commands.ts - –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
import type { Bot } from 'grammy'
import type { BotContext } from '../types/context'
import { mainMenuKeyboard, quickActionsKeyboard, profileKeyboard } from '../keyboards/main'
import { getWarehousesKeyboard, getCountriesKeyboard } from '../keyboards/dynamic'
import { getAdminDashboardKeyboard } from '../keyboards/admin'
import { getUserStats } from '../services/stats'
import { formatCurrency, formatDate } from '../utils/formatter'
import { trackOrder } from '../services/tracking'
import { logger } from '../utils/logger'
import { getDashboardStats, getQuickStats } from '../services/stats'

export function setupCommands(bot: Bot<BotContext>): void {
  // –ö–æ–º–∞–Ω–¥–∞ /start
  bot.command('start', async (ctx) => {
    try {
      if (!ctx.from) return
      
      const startParam = ctx.match
      
      // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
      if (startParam && startParam.startsWith('ref_')) {
        const referrerId = startParam.replace('ref_', '')
        ctx.session.referrerId = referrerId
      }
      
      if (!ctx.user) {
        // –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å - –Ω–∞—á–∏–Ω–∞–µ–º —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
        await ctx.replyWithHTML(
          'üöÄ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ CargoExpress!</b>\n\n' +
          '–î–æ—Å—Ç–∞–≤–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑-–∑–∞ —Ä—É–±–µ–∂–∞ –≤ –†–æ—Å—Å–∏—é üá∑üá∫\n\n' +
          'üåç –†–∞–±–æ—Ç–∞–µ–º —Å–æ —Å–∫–ª–∞–¥–∞–º–∏ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É\n' +
          'üì¶ –î–æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ—Å—ã–ª–∫–∏ –∏ –≤—ã–∫—É–ø–∞–µ–º —Ç–æ–≤–∞—Ä—ã\n' +
          '‚ö° –ë—ã—Å—Ç—Ä–æ, –Ω–∞–¥–µ–∂–Ω–æ, –≤—ã–≥–æ–¥–Ω–æ\n\n' +
          '–ò–∑—É—á–∏—Ç–µ –Ω–∞—à–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:',
          {
            reply_markup: new InlineKeyboard()
              .text('üè¢ –ê–¥—Ä–µ—Å–∞ —Å–∫–ª–∞–¥–æ–≤', 'info:warehouses')
              .text('üìã –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç', 'info:how')
              .row()
              .text('üí∞ –¢–∞—Ä–∏—Ñ—ã –¥–æ—Å—Ç–∞–≤–∫–∏', 'info:tariffs')
              .text('üõí –ü—Ä–∏–º–µ—Ä—ã —Ç–æ–≤–∞—Ä–æ–≤', 'info:products')
              .row()
              .text('‚ñ∂Ô∏è –ù–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é', 'registration:start')
          }
        )
        return
      }
      
      // –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
      const stats = await getUserStats(ctx.user.id)
      const mainKeyboard = await mainMenuKeyboard(ctx)
      
      await ctx.replyWithHTML(
        `üëã <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${ctx.user.firstName}!</b>\n\n` +
        `üÜî ID: <code>#${ctx.user.customId}</code>\n` +
        `üí∞ –ë–∞–ª–∞–Ω—Å: <b>${formatCurrency(stats.balance)}</b>\n` +
        `üì¶ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤: <b>${stats.activeOrders}</b>\n` +
        (stats.vipTier !== 'REGULAR' ? `üéÅ VIP —Å—Ç–∞—Ç—É—Å: <b>${stats.vipTier}</b>\n` : ''),
        {
          reply_markup: mainKeyboard
        }
      )
    } catch (error) {
      logger.error('Error in /start command:', error)
      await ctx.reply('‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.')
    }
  })
  
  // –ö–æ–º–∞–Ω–¥–∞ /track - –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–æ—Å—ã–ª–∫–∏
  bot.command('track', async (ctx) => {
    const trackingNumber = ctx.match?.trim()
    
    if (!trackingNumber) {
      await ctx.replyWithHTML(
        'üìç <b>–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–æ—Å—ã–ª–∫–∏</b>\n\n' +
        '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞ –∏–ª–∏ —Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä:\n\n' +
        '<i>–ü—Ä–∏–º–µ—Ä—ã:</i>\n' +
        '‚Ä¢ <code>#SP12345</code> (–Ω–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞)\n' +
        '‚Ä¢ <code>CP123456789US</code> (—Ç—Ä–µ–∫-–Ω–æ–º–µ—Ä)',
        {
          reply_markup: new InlineKeyboard()
            .text('üì¶ –ú–æ–∏ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã', 'orders:active')
            .row()
            .text('‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'menu:main')
        }
      )
      return
    }
    
    const tracking = await trackOrder(trackingNumber, ctx.user?.id)
    
    if (!tracking) {
      await ctx.reply('‚ùå –ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–æ–º–µ—Ä –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.')
      return
    }
    
    const statusEmoji = {
      CREATED: 'üÜï',
      PAID: 'üí≥',
      WAREHOUSE_RECEIVED: 'üì¶',
      PROCESSING: 'üîÑ',
      SHIPPED: '‚úàÔ∏è',
      CUSTOMS: 'üèõÔ∏è',
      IN_TRANSIT: 'üöõ',
      READY_PICKUP: 'üè™',
      DELIVERED: '‚úÖ',
    }
    
    await ctx.replyWithHTML(
      `üìç <b>–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ ${tracking.orderNumber}</b>\n\n` +
      `üì¶ ${tracking.description}\n` +
      `üë§ –ü–æ–ª—É—á–∞—Ç–µ–ª—å: ${tracking.recipient}\n` +
      `üè† –ê–¥—Ä–µ—Å: ${tracking.address}\n\n` +
      `${statusEmoji[tracking.status] || 'üìç'} <b>–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:</b> ${tracking.statusText}\n` +
      `üìç –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: ${tracking.location}\n` +
      `‚è±Ô∏è –û–±–Ω–æ–≤–ª–µ–Ω–æ: ${formatDate(tracking.updatedAt)}\n\n` +
      '<b>–ò—Å—Ç–æ—Ä–∏—è –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–π:</b>\n' +
      tracking.history.map(h => 
        `${h.date} - ${h.status}${h.location ? ` (${h.location})` : ''}`
      ).join('\n'),
      {
        reply_markup: new InlineKeyboard()
          .text('üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å', `track:refresh:${trackingNumber}`)
          .text('üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞', 'support:order')
          .row()
          .text('üìß –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç—Ä–µ–∫–∏–Ω–≥', `track:email:${trackingNumber}`)
          .row()
          .text('‚¨ÖÔ∏è –ù–∞–∑–∞–¥', 'menu:main')
      }
    )
  })
  
  // –ö–æ–º–∞–Ω–¥–∞ /warehouses - –∞–¥—Ä–µ—Å–∞ —Å–∫–ª–∞–¥–æ–≤
  bot.command('warehouses', async (ctx) => {
    const keyboard = await getWarehousesKeyboard()
    
    await ctx.replyWithHTML(
      'üè¢ <b>–ù–∞—à–∏ —Å–∫–ª–∞–¥—ã –ø–æ –º–∏—Ä—É</b>\n\n' +
      `–û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –ø–æ—Å—ã–ª–∫–∏ —Å —É–∫–∞–∑–∞–Ω–∏–µ–º ID: <code>#${ctx.user?.customId || 'XXXXX'}</code>\n` +
      '–í—ã–±–µ—Ä–∏—Ç–µ —Å–∫–ª–∞–¥ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∞–¥—Ä–µ—Å–∞:',
      {
        reply_markup: keyboard
      }
    )
  })
  
  // –ö–æ–º–∞–Ω–¥–∞ /calculator - –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏
  bot.command('calculator', async (ctx) => {
    await ctx.replyWithHTML(
      'üìä <b>–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –¥–æ—Å—Ç–∞–≤–∫–∏</b>\n\n' +
      '–†–∞—Å—Å—á–∏—Ç–∞–π—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∏ –∑–∞—Ä–∞–Ω–µ–µ.\n' +
      '–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è:',
      {
        reply_markup: await getCountriesKeyboard('shipping')
      }
    )
  })
  
  // –ö–æ–º–∞–Ω–¥–∞ /support - –ø–æ–¥–¥–µ—Ä–∂–∫–∞
  bot.command('support', async (ctx) => {
    await ctx.replyWithHTML(
      'üí¨ <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞ CargoExpress</b>\n' +
      'üü¢ –û–Ω–ª–∞–π–Ω 24/7 | –°—Ä–µ–¥–Ω–∏–π –æ—Ç–≤–µ—Ç: 3 –º–∏–Ω—É—Ç—ã\n\n' +
      '–ö–∞–∫ –º–æ–∂–µ–º –ø–æ–º–æ—á—å?',
      {
        reply_markup: new InlineKeyboard()
          .text('‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã', 'support:faq')
          .text('üìç –ì–¥–µ –º–æ—è –ø–æ—Å—ã–ª–∫–∞?', 'support:tracking')
          .row()
          .text('üí∞ –í–æ–ø—Ä–æ—Å—ã –ø–æ –æ–ø–ª–∞—Ç–µ', 'support:payment')
          .text('üì¶ –ü—Ä–æ–±–ª–µ–º–∞ —Å –∑–∞–∫–∞–∑–æ–º', 'support:order')
          .row()
          .text('üõí –ü–æ–º–æ—â—å —Å –≤—ã–∫—É–ø–æ–º', 'support:purchase')
          .text('üè¢ –í–æ–ø—Ä–æ—Å –ø–æ —Å–∫–ª–∞–¥—É', 'support:warehouse')
          .row()
          .text('üí¨ –ß–∞—Ç —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º', 'support:chat')
          .row()
          .text('‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', 'menu:main')
      }
    )
  })
  
  // –ö–æ–º–∞–Ω–¥–∞ /profile - –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  bot.command('profile', async (ctx) => {
    if (!ctx.user) {
      await ctx.reply('‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start')
      return
    }
    
    const stats = await getUserStats(ctx.user.id)
    const keyboard = await profileKeyboard(ctx.user.id)
    
    await ctx.replyWithHTML(
      `üë§ <b>${ctx.user.firstName} ${ctx.user.lastName || ''}</b>\n` +
      `üÜî ID: <code>#${ctx.user.customId}</code> | üí∞ –ë–∞–ª–∞–Ω—Å: <b>${formatCurrency(stats.balance)}</b>\n\n` +
      'üìä <b>–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n' +
      `‚îú –ó–∞–∫–∞–∑–æ–≤ –≤—Å–µ–≥–æ: ${stats.totalOrders}\n` +
      `‚îú –ê–∫—Ç–∏–≤–Ω—ã—Ö: ${stats.activeOrders}\n` +
      `‚îú –ü–æ—Ç—Ä–∞—á–µ–Ω–æ: ${formatCurrency(stats.totalSpent)}\n` +
      `‚îú –°—ç–∫–æ–Ω–æ–º–ª–µ–Ω–æ: ${formatCurrency(stats.totalSaved)}\n` +
      `‚îî –°—Ç–∞—Ç—É—Å: ${stats.vipTier === 'REGULAR' ? '–û–±—ã—á–Ω—ã–π' : `VIP ${stats.vipTier} ‚≠ê`}\n\n` +
      '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–º:',
      {
        reply_markup: keyboard
      }
    )
  })
  
  // –ö–æ–º–∞–Ω–¥–∞ /help - –ø–æ–º–æ—â—å
  bot.command('help', async (ctx) => {
    await ctx.replyWithHTML(
      '‚ùì <b>–ü–æ–º–æ—â—å –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞</b>\n\n' +
      '<b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n' +
      '/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n' +
      '/track - –û—Ç—Å–ª–µ–¥–∏—Ç—å –ø–æ—Å—ã–ª–∫—É\n' +
      '/warehouses - –ê–¥—Ä–µ—Å–∞ —Å–∫–ª–∞–¥–æ–≤\n' +
      '/calculator - –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –¥–æ—Å—Ç–∞–≤–∫–∏\n' +
      '/support - –ü–æ–¥–¥–µ—Ä–∂–∫–∞\n' +
      '/profile - –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å\n\n' +
      '<b>–ö–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑:</b>\n' +
      '1. –ù–∞–∂–º–∏—Ç–µ "üì¶ –ù–æ–≤–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞" –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é\n' +
      '2. –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è\n' +
      '3. –£–∫–∞–∂–∏—Ç–µ –≤–µ—Å –∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ\n' +
      '4. –û–ø–ª–∞—Ç–∏—Ç–µ –∑–∞–∫–∞–∑\n\n' +
      '<b>–ö–∞–∫ –∑–∞–∫–∞–∑–∞—Ç—å –≤—ã–∫—É–ø:</b>\n' +
      '1. –ù–∞–∂–º–∏—Ç–µ "üõí –ó–∞–∫–∞–∑–∞—Ç—å —Ç–æ–≤–∞—Ä"\n' +
      '2. –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω—É –º–∞–≥–∞–∑–∏–Ω–∞\n' +
      '3. –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Ç–æ–≤–∞—Ä\n' +
      '4. –û–ø–ª–∞—Ç–∏—Ç–µ –ø—Ä–µ–¥–æ–ø–ª–∞—Ç—É\n\n' +
      '–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º: /support',
      {
        reply_markup: quickActionsKeyboard
      }
    )
  })
  
  // –ö–æ–º–∞–Ω–¥–∞ /admin - –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
  bot.command('admin', async (ctx) => {
    if (!ctx.isAdmin) {
      await ctx.reply('‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ')
      return
    }
    
    const stats = await getDashboardStats()
    
    await ctx.replyWithHTML(
      'üîß <b>AdminPanel CargoExpress</b>\n' +
      `üë®‚Äçüíº ${ctx.admin!.firstName} ${ctx.admin!.lastName} | ${ctx.admin!.role}\n\n` +
      `üìä <b>DASHBOARD (${formatDate(new Date())})</b>\n\n` +
      'üí∞ <b>–§–ò–ù–ê–ù–°–´ –ó–ê –°–ï–ì–û–î–ù–Ø:</b>\n' +
      `‚îú –í—ã—Ä—É—á–∫–∞: ${formatCurrency(stats.todayRevenue)} (${stats.revenueChange > 0 ? '+' : ''}${stats.revenueChange}%)\n` +
      `‚îú –ù–æ–≤—ã—Ö –ø–ª–∞—Ç–µ–∂–µ–π: ${stats.todayPayments} —à—Ç\n` +
      `‚îú –°—Ä–µ–¥–Ω–∏–π —á–µ–∫: ${formatCurrency(stats.avgOrderValue)}\n` +
      `‚îî –û–∂–∏–¥–∞—é—Ç –æ–ø–ª–∞—Ç—ã: ${stats.pendingPayments} –∑–∞–∫–∞–∑–æ–≤\n\n` +
      'üì¶ <b>–ó–ê–ö–ê–ó–´ –ó–ê –°–ï–ì–û–î–ù–Ø:</b>\n' +
      `‚îú –°–æ–∑–¥–∞–Ω–æ: ${stats.todayOrders} –∑–∞–∫–∞–∑–æ–≤\n` +
      `‚îú –ü–æ—Å—ã–ª–∫–∏: ${stats.shippingOrders} | –í—ã–∫—É–ø—ã: ${stats.purchaseOrders}\n` +
      `‚îú –¢—Ä–µ–±—É—é—Ç –≤–Ω–∏–º–∞–Ω–∏—è: ${stats.problemOrders} ‚ö†Ô∏è\n` +
      `‚îî –í –æ–±—Ä–∞–±–æ—Ç–∫–µ: ${stats.processingOrders}\n\n` +
      'üë• <b>–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò:</b>\n' +
      `‚îú –í—Å–µ–≥–æ: ${stats.totalUsers} | –ù–æ–≤—ã—Ö —Å–µ–≥–æ–¥–Ω—è: ${stats.todayUsers}\n` +
      `‚îú –û–Ω–ª–∞–π–Ω —Å–µ–π—á–∞—Å: ${stats.onlineUsers}\n` +
      `‚îî VIP –∫–ª–∏–µ–Ω—Ç–æ–≤: ${stats.vipUsers}`,
      {
        reply_markup: await getAdminDashboardKeyboard(ctx.admin!.role)
      }
    )
  })
  
  // –ö–æ–º–∞–Ω–¥–∞ /stats - –±—ã—Å—Ç—Ä–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ (–¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
  bot.command('stats', async (ctx) => {
    if (!ctx.isAdmin) {
      await ctx.reply('‚ùå –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ')
      return
    }
    
    const stats = await getQuickStats()
    
    await ctx.replyWithHTML(
      'üìä <b>–ë—ã—Å—Ç—Ä–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>\n\n' +
      stats.map(s => `${s.label}: <b>${s.value}</b>`).join('\n'),
      {
        reply_markup: new InlineKeyboard()
          .text('üîß –ü–æ–ª–Ω–∞—è –ø–∞–Ω–µ–ª—å', 'admin:dashboard')
          .text('üìä –î–µ—Ç–∞–ª—å–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞', 'admin:analytics')
      }
    )
  })
  
  // –ö–æ–º–∞–Ω–¥–∞ /broadcast - —Ä–∞—Å—Å—ã–ª–∫–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
  bot.command('broadcast', async (ctx) => {
    if (!ctx.isAdmin || !['SUPER_ADMIN', 'ORDER_MANAGER'].includes(ctx.admin!.role)) {
      await ctx.reply('‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏')
      return
    }
    
    await ctx.reply('üì¢ –ù–∞—á–Ω–∏—Ç–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–∞—Å—Å—ã–ª–∫–∏:', {
      reply_markup: new InlineKeyboard()
        .text('üì¢ –í—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º', 'broadcast:all')
        .text('üåü –¢–æ–ª—å–∫–æ VIP', 'broadcast:vip')
        .row()
        .text('üì¶ –° –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∑–∞–∫–∞–∑–∞–º–∏', 'broadcast:active')
        .text('üÜï –ù–æ–≤—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º', 'broadcast:new')
        .row()
        .text('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel')
    })
  })
}